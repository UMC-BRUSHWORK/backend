paths:
  /user/{userId}/like:
    get:
      tags:
        - User
      summary: 선호 작품 불러오기
      security:
        - Authorization: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            description: 사용자 sequence Number
        - in: query
          name: cursorId
          required: false
          schema:
            type: integer
            description: 없으면 가장 최근의 선호 작품부터 불러옴.
        - in: query
          name: paging
          required: false
          schema:
            type: integer
            description: 'default: 3, 한 번에 몇 개의 데이터를 불러올 지 지정'
      responses:
        '200':
          description: 선호 작품 불러오기 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "success!"
                  data:
                    type: array
                    example: {
                      "userLikeList": [
                        {
                            "fv_id": 1,
                            "userId": 2,
                            "favorStatus": 1,
                            "productId": 1,
                            "productName": "작품명",
                            "productAuthor": "작가명",
                            "productStatus": 1,
                            "productImg": "imgURL"
                        },
                        {
                            "fv_id": 1,
                            "userId": 2,
                            "favorStatus": 1,
                            "productId": 1,
                            "productName": "작품명2",
                            "productAuthor": "작가명2",
                            "productStatus": 0,
                            "productImg": "imgURL2"
                        }
                      ],
                      "cursorId": 2
                    }
                
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: COMMON001
                  message:
                    type: string
                    example: 잘못된 요청입니다

        '500':
          description: 서버 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: COMMON000
                  message:
                    type: string
                    example: 서버 에러, 관리자에게 문의 바랍니다.
    post:
      tags:
        - User
      summary: 선호 작품 등록/ 상태 변경 (좋아요 해제 혹은 재설정)
      security:
        - Authorization: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
            description: 사용자 sequence Number
        - in: query
          name: productId
          required: true
          schema:
            type: integer
            description: 좋아요를 적용할 작품 ID(sequence Number) 전달
      responses:
        '200':
          description: 성공!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "success!"
                  data:
                    type: object
                    example: {
                      "id": 1,
                      "userId": 2,
                      "productId": 1,
                      "status": 1
                    }
                
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: COMMON001
                  message:
                    type: string
                    example: 잘못된 요청입니다

        '500':
          description: 서버 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: COMMON000
                  message:
                    type: string
                    example: 서버 에러, 관리자에게 문의 바랍니다.
  /user/{userId}/history:
    get:
      tags:
        - User
      summary: Retrieve user history
      description: |
        This endpoint retrieves user history data based on the provided user ID.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The ID of the user whose history is being retrieved.
        - in: query
          name: cursorId
          schema:
            type: integer
          description: |
            Cursor ID for pagination (default: -1).
        - in: query
          name: paging
          schema:
            type: integer
          description: |
            Number of records to retrieve per page (default: 3).
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  consumeList:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConsumeItem'
                  authList:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthItem'
                  cursorId:
                    type: integer
          examples:
            application/json:
              consumeList:
                - sales_id: 1
                  sales_product_id: 101
                  sales_author_id: 201
                  productName: Product 1
                  productAuthor: Author 1
              authList:
                - sales_id: 1
                  sales_product_id: 101
                  sales_consumer_id: 301
                  productName: Product 1
                  productAuthor: Author 1
              cursorId: 1
  /user/{userId}/recent:
    get:
      tags:
        - User
      summary: 사용자의 최근 데이터 가져오기
      description: 해당 사용자의 최근 데이터를 가져옵니다.
      parameters:
        - name: userId
          in: path
          description: 가져올 사용자의 ID
          required: true
          type: integer
        - name: paging
          in: query
          description: 페이지 크기
          type: integer
          default: 3
        - name: cursorId
          in: query
          description: 커서 ID
          type: integer
          default: -1
      responses:
        '200':
          description: 성공적으로 최근 데이터를 가져옴
          schema:
            type: object
            properties:
              userRecentList:
                type: array
                items:
                  type: object
                  properties:
                    product_id:
                      type: integer
                    product_name:
                      type: string
                    productAuthor:
                      type: string
                    productStatus:
                      type: string
                    productPrice:
                      type: number
                    productDescription:
                      type: string
                    productDelivery:
                      type: string
              cursorId:
                type: integer
        '400':
          description: 잘못된 매개변수
        '500':
          description: 서버 오류 발생
  /user/{userId}:
    patch:
      tags:
        - User
      summary: 사용자 정보 수정
      security:
        - Authorization: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
            description: 사용자 sequence Number
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 이미지 파일 - 1개만 가능
                  required: false
                userNickname:
                  type: string
                  format: text
                  description: 수정할 닉네임
                  example: 수정할 닉네임
                  required: false
                userIntroduce:
                  type: string
                  format: text
                  description: 수정할 소개글
                  example: 수정할 소개글
                  required: false
      responses:
        '200':
          description: 사용자 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "success!"
                  data:
                    type: array
                    example: {
                      "userId": 00,
                      "userNickname": "닉네임",
                      "userIntroduce": "소개글",
                      "userProfile": "profileImgUrl"
                    }
                
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: COMMON001
                  message:
                    type: string
                    example: 잘못된 요청입니다

        '500':
          description: 서버 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: COMMON000
                  message:
                    type: string
                    example: 서버 에러, 관리자에게 문의 바랍니다.
    get:
      tags:
        - User
      summary: 사용자 정보 조회
      security:
        - Authorization: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
            description: 사용자 sequence Number
      responses:
        '200':
          description: 사용자 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 2000
                  message:
                    type: string
                    example: "success!"
                  data:
                    type: array
                    example: {
                        "userId": 00,
                        "nickname": "닉네임",
                        "profile": "profileImgUrl",
                        "introduce": "소개글입니다.",
                        "rate": 0
                    }
                
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: COMMON001
                  message:
                    type: string
                    example: 잘못된 요청입니다

        '500':
          description: 서버 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: COMMON000
                  message:
                    type: string
                    example: 서버 에러, 관리자에게 문의 바랍니다.
