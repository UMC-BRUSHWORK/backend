paths:
  /oauth/login:
    post:
      tags:
        - OAuth
      summary: 소셜로그인 여부 확인과 비밀번호 일치 확인후 토큰 발급
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_email:
                  type: string
                  description: 소셜 이메일
                user_password:
                  type: string
                  description: 소셜 비밀번호
              required:
                - user_email
                - user_password
      responses:
        '200':
          description: 토큰 발급에 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: Token generated successfully
                  token:
                    type: string
                    example: <generated_token>
        '404':
          description: db에 소셜 로그인 이력이 존재하지 않음
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: User not found
        '500':
          description: 서버 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  message:
                    type: string
                    example: Server error
  /oauth/logout:
    post:
      tags:
        - OAuth
      summary: "세션 파괴 및 로그아웃 처리"
      responses:
        '200':
          description: "소셜 로그아웃 성공"
        '500':
          description: "세션 삭제 중 에러"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 500
                  message:
                    type: string
                    example: "세션 삭제 중 에러"